name: CI Workflow

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      target_ref:
        description: 'Branch, tag, or commit SHA to run against'
        required: false
        default: 'main'
        type: string
      run_tests:
        description: 'Run tests'
        required: false
        default: true
        type: boolean
      run_lint:
        description: 'Run lint checks'
        required: false
        default: true
        type: boolean
      upload_artifacts:
        description: 'Upload build artifacts'
        required: false
        default: true
        type: boolean
  push:
    branches:
      - main

env:
  NODE_VERSION: '22.x'
  # Use selected ref for manual runs; otherwise use the event ref
  TARGET_REF: ${{ github.event.inputs.target_ref != '' && github.event.inputs.target_ref || github.ref }}

jobs:
  # Job 1: Lint checks
  lint:
    name: Lint Checks
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.run_lint != 'false' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGET_REF }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: TypeScript type check
        run: npx tsc --noEmit

  # Job 2: Unit tests
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.run_tests != 'false' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGET_REF }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (no coverage)
        run: npm run test:run

  # Job 3: Build application
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]
    # Build when preceding jobs passed or were intentionally skipped via inputs
    if: ${{ (needs.lint.result == 'success' || needs.lint.result == 'skipped') && (needs.test.result == 'success' || needs.test.result == 'skipped') && !cancelled() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGET_REF }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: ${{ github.event.inputs.upload_artifacts != 'false' }}
        with:
          name: build-artifacts
          path: dist/
          retention-days: 30

      - name: Upload build statistics
        uses: actions/upload-artifact@v4
        if: ${{ github.event.inputs.upload_artifacts != 'false' }}
        with:
          name: build-stats
          path: |
            dist/**/*.js
            dist/**/*.css
            dist/**/*.html
          retention-days: 7

  # Job 4: Build summary and reporting
  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: always()
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        if: needs.build.result == 'success'
        with:
          name: build-artifacts
          path: ./build

      - name: Generate build summary
        run: |
          echo "## 🚀 Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint | ${{ needs.lint.result == 'success' && '✅ Passed' || needs.lint.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test | ${{ needs.test.result == 'success' && '✅ Passed' || needs.test.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ needs.build.result == 'success' && '✅ Passed' || needs.build.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -d "./build" ]; then
            echo "### 📦 Build Artifacts" >> $GITHUB_STEP_SUMMARY
            echo "Build completed successfully. Artifacts are available for download." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Build contents (first 10 files):**" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            find ./build -type f -name "*.js" -o -name "*.css" -o -name "*.html" | head -10 >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi